import express from 'express';
import * as vulnerabilityController from '../controllers/vulnerability.controller.js';
import { 
  validateCreateVulnerability,
  validateUpdateVulnerability,
  validateAddNote,
  validateMarkFalsePositive,
  validateResolveVulnerability,
  validateGetVulnerabilities,
  validateExportVulnerabilities
} from '../middleware/vulnerability.validation.js';

const router = express.Router();

// Search endpoint - must be before :id routes
router.get('/search', vulnerabilityController.searchVulnerabilities);

// Statistics endpoint
router.get('/stats', vulnerabilityController.getVulnerabilityStats);

// Export endpoint
router.get('/export', validateExportVulnerabilities, vulnerabilityController.exportVulnerabilities);

// Get vulnerabilities by scan
router.get('/by-scan/:scanId', vulnerabilityController.getVulnerabilitiesByScan);

// Main CRUD routes
router.get('/', validateGetVulnerabilities, vulnerabilityController.getVulnerabilities);
router.get('/:id', vulnerabilityController.getVulnerability);
router.patch('/:id', validateUpdateVulnerability, vulnerabilityController.updateVulnerability);

// Action endpoints
router.post('/:id/notes', validateAddNote, vulnerabilityController.addNote);
router.post('/:id/false-positive', validateMarkFalsePositive, vulnerabilityController.markAsFalsePositive);
router.post('/:id/resolve', validateResolveVulnerability, vulnerabilityController.resolveVulnerability);

export default router;